* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --text-color: white;
  --bg-url: url(./assets/bg-mobile.jpg);
  --stroke-color: rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(255, 255, 255, 0.2);
  --switch-bg-url: url(./assets/moon-stars.svg)
}

.light {
  --text-color: black;
  --bg-url: url(./assets/bg-mobile-light.jpg);
  --stroke-color: rgba(0, 0, 0, 0.5);
  --surface-color: rgba(0, 0, 0, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(0, 0, 0, 0.1);
  --switch-bg-url: url(./assets/sun.svg)
}

body {
  /*
  background-image: url(./assets/bg-mobile.jpg);
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;
  */

  /*background: color image repeat position/size */
  background: var(--bg-url) no-repeat top center/cover;
}

body * {
  font-family: "Inter", sans-serif;
  color: var(--text-color);
}

/* Após definir a margin do elemento. Podemos excluir a border: 1px solid red. */
#container {
  width: 360px;
  /*border: 1px solid red;*/
  margin: 56px auto 0px;
  padding: 0 24px;
}

/* Aplica-se ao mesmo exemplo do (#profile img). Porque o elemento (#profle -> é definido como elemento pai), neste caso o (display: block não aceita o elemento text-align: center;) */

/* Profile */
#profile {
  text-align: center;
  padding: 24px;
}

/* O elemento (display: block) alinha a imagem ao centro ao contrário da (display: inline-block). Porquê a DIV é um elemento BLOCK e o atributo IMG é um elemento INLINE. Também neste caso, podemos excluir os elementos margin: auto e display: block, que não altera a segmentação. */
#profile img {
  width: 112px;
  margin: auto;
  display: block;
}

#profile p {
  font-weight: 500;
  line-height: 24px;
  margin: 8px;
}

/* Switch */
#switch {
  position: relative;
  width: 64px;

  margin: 4px auto;
}
#switch button {
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;

  position: absolute;
  top: 50%;
  left: 0;
  z-index: 1;
  transform: translateY(-50%);
}

.light #switch button {
  right: 0;
  left: initial;
}

#switch span { /* Obs.: O elemento span por padrão não aceita Display Inline não aceita nenhuma propriedade como a largura (width). Neste caso, add o display: block; */
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  backdrop-filter: blur(4px);
  --webkit-backdrop-filter: blur(4px);
  border-radius: 9999px;
}

/* Links - Obs.: o (li) esta dentro de uma caixa, portando ele é um diplay block. Já o (a) é um display inline [em linha]. A função do display: flex, mantém as caixas do ul lado a lado e o gap deixa o espaçamento. Mas se ajustar com a propriedade flex-direction: column; mantendo alinha um abaicxo do outro junto ao gap. */

ul {
  list-style: none;

  /*display: flex;
  gap: 8px; */
  display: flex;
  flex-direction: column;
  gap: 16px;

  padding: 24px 0;
}

/* Display: flex, faz sentido com a tag (a) pq ela cupa todo espaço disponível. Flex-direction: row; não faz mudança nenhuma pq já é padrão. E o gap não faz diferença alguma, pq dentro da tag (a) só tem os textos um conteúdo. Já a propriedade justify-content: center; alinha o conteúdo ao meio no centro da tela. Se o display fosse display: block; junto com text-align: center; também funcionaria pq há texto ali. No caso align-itens; center; ajusta o texto ao meio da caixa junto a linha do topo */

ul li a {
  /* border: 1px solid red; */

  display: flex;
  /* flex-direction: row;
  gap: 8px; */

  align-items: center;
  justify-content: center;
  /* display: block;
  text-align: center; */

  padding: 16px 24px;

  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  border-radius: 8px;
  -webkit-backdrop-filter: blur(4px); /* Esta propriedade cria um efeito de embaçamento no elemento. A função -webkit faz com que este efeito aplique no Safari. */

  text-decoration: none; /* Estas propriedades tira a linha debaixo do texto */
  /* text-decoration: line-through; (Aplica o feito da linha ao meio do texto0 */
  /* text-decoration: overline; (Este efeito se aplica uma linha acima do texto) */
  /* text-decoration: underline; (Este efeito se aplica a linha abaixo do texto) */

  /* font-weight: bold; (A fonte bold ou normal é igual 400) */
  font-weight: 500;

  transition: background 0.2s;
}

/* pseudo-selector */
ul li a:hover {
  background: var(--surface-color-hover);
  border: 1.5px solid var(--text-color);
}

/* Social Links */
#social-links {
  display: flex;
  justify-content: center;

  padding: 24px 0;

  font-size: 24px;
}

#social-links a {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;

  transition: background 0.2s;
  border-radius: 50%;
}

#social-links a:hover {
  background: var(--highlight-color);
}

footer {
  padding: 24px 0;
  text-align: center;
  font-size: 14px;
}